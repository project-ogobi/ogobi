spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  mvc:
    hidden-method:
      filter:
        enabled: true
  profiles:
    active: dev
    include: secret
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://127.0.0.1:3306/ogobi__dev?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Seoul
    username: root
    password:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
  websocket:
    stomp:
      endpoint: /chat
  s3:
    bucket: ogobi
  security:
    oauth2:
      client:
        registration:
          kakao:
            scope:
              - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: POST # 카카오는 필수 파라미터를 POST로 요청
            redirect-uri: '${custom.site.baseUrl}/login/oauth2/code/{registrationId}' # 코드를 받는 URL
          google:
            scope:
              - email
            client-name: Google
            redirect-uri: '${custom.site.baseUrl}/login/oauth2/code/{registrationId}'
          naver:
            scope:
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '${custom.site.baseUrl}/login/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
logging:
  level:
    root: INFO
    site.ogobi.ogobi: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE

image:
  upload-dir: classpath:/tmp/

custom:
  site:
    baseUrl: http://localhost:8111